<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.calvert.system.mapper.SysNoticeMapper">
    
    <resultMap type="SysNotice" id="SysNoticeResult">
        <result property="noticeId"       column="notice_id"       />
        <result property="userId"         column="user_id"       />
        <result property="isRead"         column="is_read"       />
        <result property="noticeTitle"    column="notice_title"    />
        <result property="noticeType"     column="notice_type"     />
        <result property="readNotice"     column="notice_read_status"     />
        <result property="noticeContent"  column="notice_content"  />
        <result property="status"         column="status"          />
        <result property="createBy"       column="create_by"       />
        <result property="createTime"     column="create_time"     />
        <result property="updateBy"       column="update_by"       />
        <result property="updateTime"     column="update_time"     />
        <result property="remark"         column="remark"          />
    </resultMap>
    
    <sql id="selectNoticeVo">
        select notice_id, notice_title, notice_type, cast(notice_content as char) as notice_content, notice_read_status, status, create_by, create_time, update_by, update_time, remark
		from sys_notice
    </sql>
    
    <select id="selectNoticeById" parameterType="Long" resultMap="SysNoticeResult">
        <include refid="selectNoticeVo"/>
        where notice_id = #{noticeId}
    </select>

    <select id="getNoticeByUser" parameterType="SysNotice" resultMap="SysNoticeResult">

    </select>
    
    <select id="selectNoticeList" parameterType="SysNotice" resultMap="SysNoticeResult">
        <include refid="selectNoticeVo"/>
        <where>
			<if test="noticeTitle != null and noticeTitle != ''">
				AND notice_title like concat('%', #{noticeTitle}, '%')
			</if>
			<if test="noticeType != null and noticeType != ''">
				AND notice_type = #{noticeType}
			</if>
            <if test="readNotice != null and readNotice != ''">
                AND notice_read_status = #{readNotice}
            </if>
			<if test="createBy != null and createBy != ''">
				AND create_by like concat('%', #{createBy}, '%')
			</if>
		</where>
    </select>

<!--    <select id="getNoticeListByUserId" resultType="SysNotice">-->
<!--        select-->
<!--        notice_id, notice_title-->
<!--        from sys_notice-->
<!--        where not EXISTS (-->
<!--        select-->
<!--        1-->
<!--        from-->
<!--        sys_notice_user_read t-->
<!--        where-->
<!--        a.id = t.notice_id-->
<!--        and t.user_id = #{userId}-->
<!--        )-->
<!--    </select>-->

    <select id="findNoticeByUser" parameterType="SysNotice" resultMap="SysNoticeResult">
        select n.notice_id, n.notice_title, n.notice_type, n.status, n.create_by, cast(n.notice_content as char) as notice_content, n.update_by, n.update_time, n.remark, n.create_time, nr.is_read
        from sys_notice n
        left join sys_notice_user_read nr
        on n.notice_id = nr.notice_id and nr.user_id = #{userId}
        <where>
            <if test="noticeTitle != null and noticeTitle != ''">
                AND n.notice_title like concat('%', #{noticeTitle}, '%')
            </if>
            <if test="noticeType != null and noticeType != ''">
                AND n.notice_type = #{noticeType}
            </if>
            <if test="createBy != null and createBy != ''">
                AND n.create_by like concat('%', #{createBy}, '%')
            </if>
        </where>
    </select>
    
    <insert id="insertNotice" parameterType="SysNotice">
        insert into sys_notice (
			<if test="noticeTitle != null and noticeTitle != '' ">notice_title, </if>
			<if test="noticeType != null and noticeType != '' ">notice_type, </if>
            <if test="readNotice != null and readNotice != '' ">notice_read_status, </if>
			<if test="noticeContent != null and noticeContent != '' ">notice_content, </if>
			<if test="status != null and status != '' ">status, </if>
			<if test="remark != null and remark != ''">remark,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
			<if test="noticeTitle != null and noticeTitle != ''">#{noticeTitle}, </if>
			<if test="noticeType != null and noticeType != ''">#{noticeType}, </if>
            <if test="readNotice != null and readNotice != ''">#{readNotice}, </if>
			<if test="noticeContent != null and noticeContent != ''">#{noticeContent}, </if>
			<if test="status != null and status != ''">#{status}, </if>
			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate()
		)
    </insert>
	 
    <update id="updateNotice" parameterType="SysNotice">
        update sys_notice 
        <set>
            <if test="noticeTitle != null and noticeTitle != ''">notice_title = #{noticeTitle}, </if>
            <if test="noticeType != null and noticeType != ''">notice_type = #{noticeType}, </if>
            <if test="readNotice != null and readNotice != ''">notice_read_status = #{readNotice}, </if>
            <if test="noticeContent != null">notice_content = #{noticeContent}, </if>
            <if test="status != null and status != ''">status = #{status}, </if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			update_time = sysdate()
        </set>
        where notice_id = #{noticeId}
    </update>
	
    <delete id="deleteNoticeById" parameterType="Long">
        delete from sys_notice where notice_id = #{noticeId}
    </delete>
    
    <delete id="deleteNoticeByIds" parameterType="Long">
        delete from sys_notice where notice_id in 
        <foreach item="noticeId" collection="array" open="(" separator="," close=")">
            #{noticeId}
        </foreach>
    </delete>


<!--    author Calvert -->

    <update id="setReadNotice" parameterType="SysNotice">
        update sys_notice_user_read
        <set>
            is_read = #{isRead}
        </set>
        where notice_id = #{noticeId}
    </update>

    <update id="updateNoticesToRead" parameterType="Long">
        update sys_notice
        <set>
            notice_read_status = '1',
        </set>
        where notice_id in
        <foreach item="noticeId" collection="array" open="(" separator="," close=")">
            #{noticeId}
        </foreach>
    </update>


    <insert id="insertNoticeInfoToUserRead" parameterType="SysNotice">
        insert into sys_notice_user_read
            (notice_id, user_id, is_read, status, remark, create_time, update_time, create_by, read_time)
        values
            (#{noticeId}, #{userId}, #{isRead}, #{status}, #{remark}, #{createTime}, #{updateTime}, #{createBy}, sysdate())
    </insert>

    <update id="updateUserIdToUserRead" parameterType="SysNotice">
        update sys_notice_user_read
        <set>
            user_id = #{userId}
        </set>
        where notice_id = #{noticeId}
    </update>






    
</mapper>